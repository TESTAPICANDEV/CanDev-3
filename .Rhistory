geom_point()
p <- ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point()
ggplotly(p,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
ggplot(data = dataset, aes( x = x, y = y, label = link))+
geom_point()
ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point()
ggplotly(p,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point()
ggplotly(p,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point()
ggplotly(p,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
View(p)
dataset <- read_csv("Dataset/finalData.csv")
x <- ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.2) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
x <- ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
minValue <- which.min(dataset$x)
dataset <- read_csv("Dataset/finalData.csv")
x <- ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
minValue
minValue2 <- which.min(dataset$x[x!=mmin(x)])
minValue2 <- which.min(dataset$x[x!=min(x)])
library(Rfast)
minValue2 <- Rfast::nth(dataset$x,2,descending = 5)
dataset <- read_csv("Dataset/finalData.csv")
x <- ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
Revelant <- dataset %>%
subset(x = minValue)%>%
subset(x = minValue2)
Revelant <- dataset %>%
subset(dataset$x = minValue)%>%
Revelant <- dataset %>%
subset(dataset$x == minValue)%>%
subset(dataset$x == minValue2)
Revelant <- dataset %>%
subset -(dataset$x == minValue)%>%
subset -(dataset$x == minValue2)
Revelant <- dataset %>%
subset (-dataset$x == minValue)%>%
subset (-dataset$x == minValue2)
Revelant <- dataset %>%
subset (-dataset$x == minValue)%>%
subset (-dataset$x == minValue2)
View(Revelant)
Revelant <- dataset %>%
subset (x == minValue, x == minValue2)
Revelant <- dataset %>%
subset (x == minValue, x == minValue2)
Revelant <- dataset %>%
subset (-x == minValue,- x == minValue2)
Revelant <- dataset %>%
subset (x  !=minValue, x!= minValue2)
minValue <- min(dataset$x)
Revelant <- dataset %>%
subset (x  !=minValue, x!= minValue2)
minValue2 <- Rfast::nth(dataset$x,2,descending = T)
minValue2 <- Rfast::nth(dataset$x,2,descending = F)
Revelant <- dataset %>%
subset (x  !=minValue, x!= minValue2)
y <- ggplot(Revelant, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value zoomed in' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
Revelant <- dataset %>%
subset (x  !=minValue, x!= minValue2)
minValue <- min(dataset$x)
minValue2 <- Rfast::nth(dataset$x,2,descending = F)
Revelant <- dataset %>%
subset (x  !=minValue, x!= minValue2)
y <- ggplot(Revelant, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value zoomed in' )
ggplotly(y,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
minValue <- min(dataset$x)
Revelant <- subset(dataset , x!= minValue)
minValue2 <- min(Revelant$x)
Revelant <- Revelant <- subset(dataset, x!= minValue2)
minValue <- min(dataset$x)
Revelant <- subset(dataset , x!= minValue)
minValue2 <- min(Revelant$x)
Revelant <- Revelant <- subset(dataset, x!= minValue2)
minValue2 <- min(Revelant$x)
Revelant <- subset(dataset , x!= minValue)
minValue <- min(dataset$x)
rm(list = ls())
library(countrycode)
library(ggrepel)
library(fable)
library(feasts)
library(forecast)
library(ggthemes)
library(janitor)
library(lmtest)
library(lubridate)
library(plotly)
library(plyr)
library(rbokeh)
library(skimr)
library(Rfast)
library(tidyverse)
library(tsibble)
library(viridis)
library(countrycode)
library(ggrepel)
library(fable)
library(feasts)
library(forecast)
library(ggthemes)
library(janitor)
library(lmtest)
library(lubridate)
library(plotly)
library(plyr)
library(rbokeh)
library(skimr)
library(Rfast)
library(tidyverse)
library(tsibble)
library(viridis)
dataset <- read_csv("Dataset/finalData.csv")
minValue <- min(dataset$x)
minValue <- min(dataset$x)
Revelant <- subset(dataset , x!= minValue)
minValue2 <- min(Revelant$x)
Revelant <- Revelant <- subset(Revelant, x!= minValue2)
y <- ggplot(Revelant, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value zoomed in' )
ggplotly(y,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
smallestREGDOCS <- dataset[minValue]
dataset <- read_csv("Dataset/finalData.csv")
x <- ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
minValue <- min(dataset$x)
Revelant <- subset(dataset , x!= minValue)
minValue2 <- min(Revelant$x)
Revelant <- Revelant <- subset(Revelant, x!= minValue2)
y <- ggplot(Revelant, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value zoomed in' )
ggplotly(y,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
y <- ggplot(Revelant, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.8) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value zoomed in' )
ggplotly(y,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
View(dataset)
dataset <- read_csv("Dataset/finalData.csv") %>%
mutate(submitter = replace(submitter, submitter == "National Energy Board",NA)
dataset <- read_csv("Dataset/finalData.csv") %>%
dataset$submitter <- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
newdataset$submitter <- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
newdatasetsubmitter <- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A"
rm(list = ls())
rm(list = ls())
library(ggthemes)
library(janitor)
library(lmtest)
library(lubridate)
library(plotly)
library(plyr)
library(rbokeh)
library(skimr)
library(tidyverse)
library(viridis)
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter
key = name,
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.8, show.legend = FALSE) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.8, show.legend = FALSE) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter)) +
geom_point(size = 0.8, show.legend = FALSE) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.8, show.legend = FALSE) +
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
y <- ggplot(Revelant, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.8, show.legend = FALSE) +
theme(legend.position = none)+
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value zoomed in' )
y <- ggplot(Revelant, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.8, show.legend = FALSE) +
theme(legend.position = 'none')+
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value zoomed in' )
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.8) +
theme(legend.position = 'none')+
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
dataset <- read_csv("Dataset/finalData.csv")
dataset$submitter<- revalue(dataset$submitter,c("National Energy Board" = "NEB"))
x <- ggplot(dataset, aes(x = x,
y= y,
color = submitter,
key = name,
key2 = submitter,
key3 = date,
key4 = link)) +
geom_point(size = 0.5) +
theme(legend.position = 'none')+
labs(x = 'X value',
y = 'Y value',
title = 'REGDOCS information and value' )
ggplotly(x,tooltip = c("name","submitter","date","link"), dynamicTicks = TRUE, layerData = 1,
originalData = TRUE, source = "A")
# Set some options
knitr::opts_chunk$set(echo = TRUE, fig.height = 8, fig.width = 10)
skimr::skim_with(numeric = list(hist = NULL))
# load libraries
library(ggthemes)
library(janitor)
library(lmtest)
library(lubridate)
library(plotly)
library(plyr)
library(rbokeh)
library(skimr)
library(tidyverse)
library(viridis)
![]("Dataset/82324214_164733181462012_6668531090384224256_n.png")
!("Dataset/82324214_164733181462012_6668531090384224256_n.png")
!("Dataset/.png")
![Letters sent to and from](Dataset/82324214_164733181462012_6668531090384224256_n.png)
!Letters sent to and from(Dataset/82324214_164733181462012_6668531090384224256_n.png)
![](Dataset/82324214_164733181462012_6668531090384224256_n.png)
![](Dataset/82324214_164733181462012_6668531090384224256_n.png)
![](Dataset/82324214_164733181462012_6668531090384224256_n.png)
![](Dataset/82324214_164733181462012_6668531090384224256_n.png)
![](Dataset/82324214_164733181462012_6668531090384224256_n.png)
![](Dataset/82324214_164733181462012_6668531090384224256_n.png)
![](Dataset/82324214_164733181462012_6668531090384224256_n.png)
!["kappa"]("Dataset/82324214_164733181462012_6668531090384224256_n.png")
!Letters sent to and from(./Dataset/82324214_164733181462012_6668531090384224256_n.png)
![Letters sent to and from](./Dataset/82324214_164733181462012_6668531090384224256_n.png)
![Letters sent to and from](./Dataset/82324214_164733181462012_6668531090384224256_n.png)
![Letters sent to and from](./Dataset/Vinh.png)
